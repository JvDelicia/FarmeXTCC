
@{
    Layout = null;
}
<link href="~/assets/css/chatmobile.css" rel="stylesheet" />
@if (Session["Id"] != null)
{
    <div class="chat-box fixed-positioning">
        <div class="chat-header">
            <span>Chat online <span id="smgs"></span></span>
            <button class="btn btn-xs">Show</button>
        </div>
        <div class="chat-content">
            <div class="conteudo">
                <ul id="discussion"></ul>
            </div><br />
            <div class="myndie-input">
                <input type="text" id="message" placeholder="Send Messages...">
            </div>
            @*<input type="button" id="sendmessage" class="btn btn-lg" value="send">*@
            <div class="align-center">
                <button class="btn btn-lg" id="sendmessage">Send</button>
            </div>
            <div>
                <input type="hidden" id="displayname" />
            </div>
        </div>
    </div>
}

<script type="text/javascript" src="~/assets/bower_components/jquery/dist/jquery.min.js"></script>

<!-- Init SignalR -->
<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
<script src="~/Scripts/chatmobile.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<script>

    $(function () {
            var x = 50;
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<h4 class="mb-0"><span class="a">' + htmlEncode(name) + ' : </span><span class="label label-default a" class="a">' + htmlEncode(message) + '</span></h4><br>');
                var number = parseInt($('#smgs').text());
                if (isNaN(number)) {
                    number = 0;
                }
                if (htmlEncode(name) != $('#displayname').val) {
                    $('#smgs').text(number + 1);
                }
                $("div").scrollTop(x);
                x = x + 50;

            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val('@ViewBag.User.Username');
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.

            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {



                    $('#smgs').text("");
                        // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());

                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                    });
                });
            });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        var input = document.getElementById("message");
        input.addEventListener("keyup", function (event) {
            event.preventDefault();
            if (event.keyCode === 13) {
                document.getElementById("sendmessage").click();
            }
        });

</script>
